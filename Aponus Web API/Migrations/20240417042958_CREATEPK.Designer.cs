// <auto-generated />
using System;
using Aponus_Web_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AponusWebAPI.Migrations
{
    [DbContext(typeof(AponusContext))]
    [Migration("20240417042958_CREATEPK")]
    partial class CREATEPK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AI")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aponus_Web_API.Models.ArchivosMovimientosStock", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("ID_MOVIMIENTO");

                    b.Property<string>("HashArchivo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("HASH_ARCHIVO");

                    b.Property<byte[]>("IdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Varbinary(1)")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<string>("MimeType")
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("MIME_TYPE");

                    b.Property<string>("PathArchivo")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("PATH");

                    b.HasKey("IdMovimiento", "HashArchivo");

                    b.HasIndex("IdEstado");

                    b.ToTable("ARCHIVOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ComponentesCuantitativo", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("IdComponente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<int>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdProducto", "IdComponente");

                    b.HasIndex("IdComponente");

                    b.ToTable("COMPONENTES_CUANTITATIVOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ComponentesDescripcion", b =>
                {
                    b.Property<int>("IdDescripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_DESCRIPCION");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDescripcion"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdDescripcion");

                    b.ToTable("COMPONENTES_DESCRIPCION", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ComponentesDetalle", b =>
                {
                    b.Property<string>("IdInsumo")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_INSUMO");

                    b.Property<decimal?>("Altura")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ALTURA");

                    b.Property<decimal?>("Diametro")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DIAMETRO");

                    b.Property<int?>("DiametroNominal")
                        .HasColumnType("int")
                        .HasColumnName("DIAMETRO_NOMINAL");

                    b.Property<decimal?>("Espesor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ESPESOR");

                    b.Property<string>("IdAlmacenamiento")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID_ALMACENAMIENTO");

                    b.Property<int>("IdDescripcion")
                        .HasColumnType("int")
                        .HasColumnName("ID_DESCRIPCION");

                    b.Property<byte[]>("IdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("IdFraccionamiento")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID_FRACCIONAMIENTO");

                    b.Property<decimal?>("Longitud")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("LONGITUD");

                    b.Property<int?>("Perfil")
                        .HasColumnType("int")
                        .HasColumnName("PERFIL");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("PESO");

                    b.Property<string>("Tolerancia")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TOLERANCIA");

                    b.HasKey("IdInsumo")
                        .HasName("PK_ID_INSUMO");

                    b.HasIndex("IdEstado");

                    b.ToTable("COMPONENTES_DETALLE", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ComponentesMensurable", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("IdComponente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<decimal?>("Altura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ALTURA")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Largo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("LARGO")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdProducto", "IdComponente");

                    b.HasIndex("IdComponente");

                    b.ToTable("COMPONENTES_MENSURABLES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ComponentesPesable", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("IdComponente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<decimal?>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CANTIDAD")
                        .HasDefaultValueSql("NULL");

                    b.Property<decimal?>("Peso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("PESO")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdProducto", "IdComponente");

                    b.HasIndex("IdComponente");

                    b.ToTable("COMPONENTES_PESABLES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.CuantitativosDetalle", b =>
                {
                    b.Property<string>("IdComponente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<decimal?>("Altura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ALTURA")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Diametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DIAMETRO")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Espesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ESPESOR")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("IdDescripcion")
                        .HasColumnType("int")
                        .HasColumnName("ID_DESCRIPCION");

                    b.Property<int?>("IdDescripcionNavigationIdDescripcion")
                        .HasColumnType("int");

                    b.Property<int?>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PERFIL")
                        .HasDefaultValueSql("null");

                    b.Property<string>("Tolerancia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TOLERANCIA");

                    b.HasKey("IdComponente");

                    b.HasIndex("IdDescripcionNavigationIdDescripcion");

                    b.ToTable("CUANTITATIVOS_DETALLE", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosArchivosMovimientosStock", b =>
                {
                    b.Property<byte[]>("IdEstado")
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_ARCHIVOS_MOVIMIENTOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosComponentesDetalles", b =>
                {
                    b.Property<byte[]>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("EstadosComponentesDetalle");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosMovimientosStock", b =>
                {
                    b.Property<byte[]>("IdEstado")
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<byte[]>("IdEstadoPropio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO_PROPIO")
                        .HasDefaultValueSql("1");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_MOVIMIENTOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosProductos", b =>
                {
                    b.Property<byte[]>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("EstadosProducto");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosProductosComponentes", b =>
                {
                    b.Property<byte[]>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("EstadosProductosComponente");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosProductosDescripciones", b =>
                {
                    b.Property<byte[]>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_PRODUCTOS_DESCRIPCIONES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosSuministrosMovimientosStock", b =>
                {
                    b.Property<byte[]>("IdEstado")
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_SUMINISTROS_MOVIMIENTOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosTiposProductos", b =>
                {
                    b.Property<byte[]>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_PRODUCTOS_TIPOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.MensurablesDetalle", b =>
                {
                    b.Property<string>("IdComponente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<decimal?>("Altura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ALTURA")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Ancho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ANCHO")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Espesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ESPESOR")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("IdDescripcion")
                        .HasColumnType("int")
                        .HasColumnName("ID_DESCRIPCION");

                    b.Property<int?>("IdDescripcionNavigationIdDescripcion")
                        .HasColumnType("int");

                    b.Property<decimal?>("Largo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("LARGO")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PERFIL")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdComponente");

                    b.HasIndex("IdDescripcionNavigationIdDescripcion");

                    b.ToTable("MENSURABLES_DETALLE", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.PesablesDetalle", b =>
                {
                    b.Property<string>("IdComponente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<decimal?>("Altura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ALTURA")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Diametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DIAMETRO")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("IdDescripcion")
                        .HasColumnType("int")
                        .HasColumnName("ID_DESCRIPCION");

                    b.Property<int?>("IdDescripcionNavigationIdDescripcion")
                        .HasColumnType("int");

                    b.HasKey("IdComponente");

                    b.HasIndex("IdDescripcionNavigationIdDescripcion");

                    b.ToTable("PESABLES_DETALLE", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Producto", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int?>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("DiametroNominal")
                        .HasColumnType("int")
                        .HasColumnName("DIAMETRO_NOMINAL");

                    b.Property<int>("IdDescripcion")
                        .HasColumnType("int")
                        .HasColumnName("ID_DESCRIPCION");

                    b.Property<byte[]>("IdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<string>("IdTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_TIPO");

                    b.Property<decimal?>("PorcentajeGanancia")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PORCENTAJE_GANANCIA");

                    b.Property<decimal?>("PrecioFinal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECIO_FINAL");

                    b.Property<decimal?>("PrecioLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("PRECIO_LISTA")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Tolerancia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TOLERANCIA");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdDescripcion");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdTipo");

                    b.ToTable("PRODUCTOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ProductosDescripcion", b =>
                {
                    b.Property<int>("IdDescripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_DESCRIPCION");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDescripcion"));

                    b.Property<string>("DescripcionProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<byte[]>("IdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.HasKey("IdDescripcion");

                    b.HasIndex("IdEstado");

                    b.ToTable("PRODUCTOS_DESCRIPCION", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ProductosTipo", b =>
                {
                    b.Property<string>("IdTipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_TIPO");

                    b.Property<string>("DescripcionTipo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<byte[]>("IdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.HasKey("IdTipo")
                        .HasName("PK_Table_1");

                    b.HasIndex("IdEstado");

                    b.ToTable("PRODUCTOS_TIPOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Productos_Componentes", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("IdComponente")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CANTIDAD");

                    b.Property<byte[]>("IdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<decimal?>("Longitud")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("LONGITUD");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PESO");

                    b.HasKey("IdProducto", "IdComponente")
                        .HasName("PK_PRODUCTOS_COMPONENTES");

                    b.HasIndex("IdEstado");

                    b.ToTable("PRODUCTOS_COMPONENTES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Productos_Tipos_Descripcion", b =>
                {
                    b.Property<string>("IdTipo")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ID_TIPO");

                    b.Property<int?>("IdDescripcion")
                        .HasColumnType("int")
                        .HasColumnName("ID_DESCRIPCION");

                    b.HasKey("IdTipo", "IdDescripcion");

                    b.ToTable("PRODUCTOS_TIPOS_DESCRIPCION", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Proveedores", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PROVEEDOR");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Altura")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ALTURA");

                    b.Property<string>("Apellido")
                        .HasColumnType("varchar(max)")
                        .HasColumnName("APELLIDO");

                    b.Property<string>("Barrio")
                        .HasColumnType("varchar(max)")
                        .HasColumnName("BARRIO");

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CALLE");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CIUDAD");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGO_POSTAL");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_REGISTRO");

                    b.Property<byte[]>("IdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(1)")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("IdFiscal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ID_FISCAL");

                    b.Property<string>("IdUsuarioRegistro")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_USUARIO_REGISTRO");

                    b.Property<string>("Localidad")
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("LOCALIDAD");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(max)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("NombreClave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOMBRE_CLAVE");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PAIS");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PROVINCIA");

                    b.Property<string>("Telefono1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEFONO_1");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEFONO_2");

                    b.Property<string>("Telefono3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEFONO_3");

                    b.HasKey("IdProveedor");

                    b.HasIndex("IdUsuarioRegistro");

                    b.ToTable("PROVEEDORES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.StockCuantitativo", b =>
                {
                    b.Property<string>("IdComponente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<int?>("CantidadGranallado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_GRANALLADO")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CantidadMoldeado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_MOLDEADO")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CantidadPintura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_PINTURA")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CantidadProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_PROCESO")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CantidadRecibido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_RECIBIDO")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdComponente");

                    b.ToTable("STOCK_CUANTITATIVOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.StockInsumos", b =>
                {
                    b.Property<string>("IdInsumo")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_INSUMO");

                    b.Property<decimal?>("Granallado")
                        .HasColumnType("decimal")
                        .HasColumnName("GRANALLADO");

                    b.Property<decimal?>("Moldeado")
                        .HasColumnType("decimal")
                        .HasColumnName("MOLDEADO");

                    b.Property<decimal?>("Pendiente")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PENDIENTE");

                    b.Property<decimal?>("Pintura")
                        .HasColumnType("decimal")
                        .HasColumnName("PINTURA");

                    b.Property<decimal?>("Proceso")
                        .HasColumnType("decimal")
                        .HasColumnName("PROCESO");

                    b.Property<decimal?>("Recibido")
                        .HasColumnType("decimal")
                        .HasColumnName("RECIBIDO");

                    b.HasKey("IdInsumo")
                        .HasName("PK_STOCK_INSUMOS");

                    b.ToTable("STOCK_INSUMOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.StockMensurable", b =>
                {
                    b.Property<string>("IdComponente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<int?>("CantidadProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_PROCESO")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CantidadRecibido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_RECIBIDO")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdComponente");

                    b.ToTable("STOCK_MENSURABLES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.StockPesable", b =>
                {
                    b.Property<string>("IdComponente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<decimal?>("CantidadPintura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CANTIDAD_PINTURA")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CantidadProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CANTIDAD_PROCESO")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CantidadRecibido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CANTIDAD_RECIBIDO")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdComponente");

                    b.ToTable("STOCK_PESABLES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Stock_Movimientos", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MOVIMIENTO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<string>("CreadoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("USUARIO_CREADO");

                    b.Property<string>("Destino")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESTINO");

                    b.Property<DateTime>("FechaHoraCreado")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("FECHA_HORA_CREADO");

                    b.Property<DateTime?>("FechaHoraUltimaModificacion")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("FECHA_HORA_ULTIMA_MODIFICACION");

                    b.Property<byte[]>("IdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Varbinary(1)")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<int>("IdProveedorDestino")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROVEEDOR_DESTINO");

                    b.Property<int>("IdProveedorOrigen")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROVEEDOR_ORIGEN");

                    b.Property<string>("ModificadoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("USUARIO_MODIFICA");

                    b.Property<string>("Origen")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ORIGEN");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("TIPO");

                    b.HasKey("IdMovimiento");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdProveedorDestino");

                    b.HasIndex("IdProveedorOrigen");

                    b.ToTable("Stock_Movimientos");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.SuministrosMovimientosStock", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("ID_MOVIMIENTO");

                    b.Property<string>("IdSuministro")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID_SUMINISTRO");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CANTIDAD");

                    b.Property<byte[]>("IdEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Varbinary(1)")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<decimal?>("ValorAnteriorDestino")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_ANTERIOR_DESTINO");

                    b.Property<decimal?>("ValorAnteriorOrigen")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_ANTERIOR_ORIGEN");

                    b.Property<decimal?>("ValorNuevoDestino")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_NUEVO_DESTINO");

                    b.Property<decimal?>("ValorNuevoOrigen")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_NUEVO_ORIGEN");

                    b.HasKey("IdMovimiento", "IdSuministro");

                    b.HasIndex("IdEstado");

                    b.ToTable("SUMINISTROS_MOVIMIENTOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Usuarios", b =>
                {
                    b.Property<string>("Usuario")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUARIO");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CONTRASEÑA");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int")
                        .HasColumnName("ID_PERFIL");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREO");

                    b.HasKey("Usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ArchivosMovimientosStock", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.EstadosArchivosMovimientosStock", "ArchivosMovimientosStockNavigation")
                        .WithMany("ArchivosMovimientoStock")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Models.Stock_Movimientos", "StockMovimiento")
                        .WithMany()
                        .HasForeignKey("IdMovimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchivosMovimientosStockNavigation");

                    b.Navigation("StockMovimiento");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ComponentesCuantitativo", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.CuantitativosDetalle", "IdComponenteNavigation")
                        .WithMany("ComponentesCuantitativos")
                        .HasForeignKey("IdComponente")
                        .IsRequired()
                        .HasConstraintName("FK_COMPONENTES_CUANTITATIVOS_CUANTITATIVOS_DETALLE");

                    b.HasOne("Aponus_Web_API.Models.StockCuantitativo", "IdComponente1")
                        .WithMany("ComponentesCuantitativos")
                        .HasForeignKey("IdComponente")
                        .IsRequired()
                        .HasConstraintName("FK_COMPONENTES_CUANTITATIVOS_STOCK_CUANTITATIVOS");

                    b.HasOne("Aponus_Web_API.Models.Producto", null)
                        .WithMany("ComponentesCuantitativos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdComponente1");

                    b.Navigation("IdComponenteNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ComponentesDetalle", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.EstadosComponentesDetalles", "IdEstadoNavigation")
                        .WithMany("ComponentesDetalle")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ComponentesMensurable", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.MensurablesDetalle", "IdComponenteNavigation")
                        .WithMany("ComponentesMensurables")
                        .HasForeignKey("IdComponente")
                        .IsRequired()
                        .HasConstraintName("FK_COMPONENTES_MENSURABLES_MENSURABLES_DETALLE");

                    b.HasOne("Aponus_Web_API.Models.StockMensurable", "IdComponente1")
                        .WithMany("ComponentesMensurables")
                        .HasForeignKey("IdComponente")
                        .IsRequired()
                        .HasConstraintName("FK_COMPONENTES_MENSURABLES_STOCK_MENSURABLES");

                    b.Navigation("IdComponente1");

                    b.Navigation("IdComponenteNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ComponentesPesable", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.PesablesDetalle", "IdComponenteNavigation")
                        .WithMany("ComponentesPesables")
                        .HasForeignKey("IdComponente")
                        .IsRequired()
                        .HasConstraintName("FK_COMPONENTES_PESABLES_PESABLES_DETALLE1");

                    b.HasOne("Aponus_Web_API.Models.StockPesable", "IdComponente1")
                        .WithMany("ComponentesPesables")
                        .HasForeignKey("IdComponente")
                        .IsRequired()
                        .HasConstraintName("FK_COMPONENTES_PESABLES_STOCK_PESABLES");

                    b.Navigation("IdComponente1");

                    b.Navigation("IdComponenteNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.CuantitativosDetalle", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.ComponentesDescripcion", "IdDescripcionNavigation")
                        .WithMany()
                        .HasForeignKey("IdDescripcionNavigationIdDescripcion");

                    b.Navigation("IdDescripcionNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.MensurablesDetalle", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.StockMensurable", "IdComponenteNavigation")
                        .WithOne("MensurablesDetalle")
                        .HasForeignKey("Aponus_Web_API.Models.MensurablesDetalle", "IdComponente")
                        .IsRequired()
                        .HasConstraintName("FK_MENSURABLES_DETALLE_STOCK_MENSURABLES");

                    b.HasOne("Aponus_Web_API.Models.ComponentesDescripcion", "IdDescripcionNavigation")
                        .WithMany()
                        .HasForeignKey("IdDescripcionNavigationIdDescripcion");

                    b.Navigation("IdComponenteNavigation");

                    b.Navigation("IdDescripcionNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.PesablesDetalle", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.ComponentesDescripcion", "IdDescripcionNavigation")
                        .WithMany()
                        .HasForeignKey("IdDescripcionNavigationIdDescripcion");

                    b.Navigation("IdDescripcionNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Producto", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.ProductosDescripcion", "IdDescripcionNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdDescripcion")
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCTOS_PRODUCTOS_DESCRIPCION");

                    b.HasOne("Aponus_Web_API.Models.EstadosProductos", "IdEstadoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Models.ProductosTipo", "IdTipoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCTOS_PRODUCTOS_TIPOS");

                    b.Navigation("IdDescripcionNavigation");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ProductosDescripcion", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.EstadosProductosDescripciones", "IdEstadoNavigation")
                        .WithMany("ProductosDescripcions")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ProductosTipo", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.EstadosTiposProductos", "IdEstadoNavigation")
                        .WithMany("ProductosTipos")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Productos_Componentes", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.EstadosProductosComponentes", "IdEstadoNavigation")
                        .WithMany("ProductosComponentes")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Proveedores", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.Usuarios", "UsuarioRegistro")
                        .WithMany("IdUsuarioRegistroNavigation")
                        .HasForeignKey("IdUsuarioRegistro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioRegistro");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.StockCuantitativo", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.CuantitativosDetalle", "IdComponenteNavigation")
                        .WithOne("StockCuantitativo")
                        .HasForeignKey("Aponus_Web_API.Models.StockCuantitativo", "IdComponente")
                        .IsRequired()
                        .HasConstraintName("FK_STOCK_CUANTITATIVOS_CUANTITATIVOS_DETALLE");

                    b.Navigation("IdComponenteNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.StockPesable", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.PesablesDetalle", "IdComponenteNavigation")
                        .WithOne("StockPesable")
                        .HasForeignKey("Aponus_Web_API.Models.StockPesable", "IdComponente")
                        .IsRequired()
                        .HasConstraintName("FK_STOCK_PESABLES_PESABLES_DETALLE");

                    b.Navigation("IdComponenteNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Stock_Movimientos", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.EstadosMovimientosStock", "estadoMovimiento")
                        .WithMany("movimientosStock")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Models.Proveedores", "ProveedorDestino")
                        .WithMany("MovimientosDestino")
                        .HasForeignKey("IdProveedorDestino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Models.Proveedores", "ProveedorOrigen")
                        .WithMany("MovimientosOrigen")
                        .HasForeignKey("IdProveedorOrigen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProveedorDestino");

                    b.Navigation("ProveedorOrigen");

                    b.Navigation("estadoMovimiento");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.SuministrosMovimientosStock", b =>
                {
                    b.HasOne("Aponus_Web_API.Models.EstadosSuministrosMovimientosStock", "EstadosSuministrosMovimientosStockNavigation")
                        .WithMany("SuministrosMovimientoStock")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Models.Stock_Movimientos", null)
                        .WithMany("Suministros")
                        .HasForeignKey("IdMovimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadosSuministrosMovimientosStockNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.CuantitativosDetalle", b =>
                {
                    b.Navigation("ComponentesCuantitativos");

                    b.Navigation("StockCuantitativo");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosArchivosMovimientosStock", b =>
                {
                    b.Navigation("ArchivosMovimientoStock");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosComponentesDetalles", b =>
                {
                    b.Navigation("ComponentesDetalle");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosMovimientosStock", b =>
                {
                    b.Navigation("movimientosStock");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosProductos", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosProductosComponentes", b =>
                {
                    b.Navigation("ProductosComponentes");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosProductosDescripciones", b =>
                {
                    b.Navigation("ProductosDescripcions");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosSuministrosMovimientosStock", b =>
                {
                    b.Navigation("SuministrosMovimientoStock");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.EstadosTiposProductos", b =>
                {
                    b.Navigation("ProductosTipos");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.MensurablesDetalle", b =>
                {
                    b.Navigation("ComponentesMensurables");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.PesablesDetalle", b =>
                {
                    b.Navigation("ComponentesPesables");

                    b.Navigation("StockPesable");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Producto", b =>
                {
                    b.Navigation("ComponentesCuantitativos");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ProductosDescripcion", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.ProductosTipo", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Proveedores", b =>
                {
                    b.Navigation("MovimientosDestino");

                    b.Navigation("MovimientosOrigen");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.StockCuantitativo", b =>
                {
                    b.Navigation("ComponentesCuantitativos");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.StockMensurable", b =>
                {
                    b.Navigation("ComponentesMensurables");

                    b.Navigation("MensurablesDetalle");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.StockPesable", b =>
                {
                    b.Navigation("ComponentesPesables");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Stock_Movimientos", b =>
                {
                    b.Navigation("Suministros");
                });

            modelBuilder.Entity("Aponus_Web_API.Models.Usuarios", b =>
                {
                    b.Navigation("IdUsuarioRegistroNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
