// <auto-generated />
using System;
using Aponus_Web_API.Modelos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Aponus_Web_API.Migrations
{
    [DbContext(typeof(AponusContext))]
    [Migration("20241027110209_Compras")]
    partial class Compras
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AI")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Aponus_Web_API.Modelos.ArchivosMovimientosStock", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("ID_MOVIMIENTO");

                    b.Property<string>("HashArchivo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("HASH_ARCHIVO");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<string>("MimeType")
                        .HasColumnType("text")
                        .HasColumnName("MIME_TYPE");

                    b.Property<string>("PathArchivo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PATH");

                    b.HasKey("IdMovimiento", "HashArchivo");

                    b.HasIndex("IdEstado");

                    b.ToTable("ARCHIVOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ComponentesDescripcion", b =>
                {
                    b.Property<int>("IdDescripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_DESCRIPCION");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDescripcion"));

                    b.Property<string>("NombreDescripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<string>("IdAlmacenamiento")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_ALMACENAMIENTO");

                    b.Property<string>("IdFraccionamiento")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_FRACCIONAMIENTO");

                    b.HasKey("IdDescripcion");

                    b.ToTable("COMPONENTES_DESCRIPCION", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ComponentesDetalle", b =>
                {
                    b.Property<string>("IdInsumo")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_INSUMO");

                    b.Property<decimal?>("Altura")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ALTURA");

                    b.Property<decimal?>("Diametro")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DIAMETRO");

                    b.Property<int?>("DiametroNominal")
                        .HasColumnType("int")
                        .HasColumnName("DIAMETRO_NOMINAL");

                    b.Property<decimal?>("Espesor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ESPESOR");

                    b.Property<string>("IdAlmacenamiento")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_ALMACENAMIENTO");

                    b.Property<int>("IdDescripcion")
                        .HasColumnType("integer")
                        .HasColumnName("ID_DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<string>("IdFraccionamiento")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_FRACCIONAMIENTO");

                    b.Property<decimal?>("Longitud")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("LONGITUD");

                    b.Property<int?>("Perfil")
                        .HasColumnType("integer")
                        .HasColumnName("PERFIL");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("PESO");

                    b.Property<string>("Tolerancia")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TOLERANCIA");

                    b.HasKey("IdInsumo")
                        .HasName("PK_ID_INSUMO");

                    b.HasIndex("IdEstado");

                    b.ToTable("COMPONENTES_DETALLE", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Compras", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_COMPRA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCompra"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA_HORA");

                    b.Property<int>("IdEstadoCompra")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_COMPRA");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROVEEDOR");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_USUARIO");

                    b.Property<decimal?>("SaldoPendiente")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SALDO_CANCELADO");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SALDO_TOTAL");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdEstadoCompra");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdUsuario");

                    b.ToTable("COMPRAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ComprasDetalles", b =>
                {
                    b.Property<int>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("ID_COMPRA");

                    b.Property<string>("IdInsumo")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_INSUMO");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CANTIDAD");

                    b.HasKey("IdCompra", "IdInsumo");

                    b.HasIndex("IdInsumo");

                    b.ToTable("COMPRAS_DETALLE", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.CuotasCompras", b =>
                {
                    b.Property<int>("IdCuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_CUOTA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCuota"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA_PAGO");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA_VENCIMIENTO");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoCuota")
                        .HasColumnType("integer");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MONTO");

                    b.Property<int>("NumeroCuota")
                        .HasColumnType("integer")
                        .HasColumnName("NUMERO_CUOTA");

                    b.HasKey("IdCuota");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdEstadoCuota");

                    b.ToTable("CUOTAS_COMPRAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.CuotasVentas", b =>
                {
                    b.Property<int>("IdCuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CUOTA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCuota"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA_PAGO");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA_VENCIMIENTO");

                    b.Property<int>("IdEstadoCuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_CUOTA")
                        .HasDefaultValueSql("1");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("ID_VENTA");

                    b.Property<decimal>("Monto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MONTO")
                        .HasDefaultValueSql("0.00");

                    b.Property<int>("NumeroCuota")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO_CUOTA");

                    b.HasKey("IdCuota");

                    b.HasIndex("IdEstadoCuota");

                    b.HasIndex("IdVenta");

                    b.ToTable("CUOTAS_VENTAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Entidades", b =>
                {
                    b.Property<int>("IdEntidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ENTIDAD");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEntidad"));

                    b.Property<string>("Altura")
                        .HasColumnType("text")
                        .HasColumnName("ALTURA");

                    b.Property<string>("Apellido")
                        .HasColumnType("text")
                        .HasColumnName("APELLIDO");

                    b.Property<string>("Barrio")
                        .HasColumnType("text")
                        .HasColumnName("BARRIO");

                    b.Property<string>("Calle")
                        .HasColumnType("text")
                        .HasColumnName("CALLE");

                    b.Property<string>("Ciudad")
                        .HasColumnType("text")
                        .HasColumnName("CIUDAD");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("text")
                        .HasColumnName("CODIGO_POSTAL");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("EMAIL");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA_REGISTRO");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("ID_CATEGORIA");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("IdFiscal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ID_FISCAL");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO");

                    b.Property<string>("IdUsuarioRegistro")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_USUARIO_REGISTRO");

                    b.Property<string>("Localidad")
                        .HasColumnType("text")
                        .HasColumnName("LOCALIDAD");

                    b.Property<string>("Nombre")
                        .HasColumnType("text")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("NombreClave")
                        .HasColumnType("text")
                        .HasColumnName("NOMBRE_CLAVE");

                    b.Property<string>("Pais")
                        .HasColumnType("text")
                        .HasColumnName("PAIS");

                    b.Property<string>("Provincia")
                        .HasColumnType("text")
                        .HasColumnName("PROVINCIA");

                    b.Property<string>("Telefono1")
                        .HasColumnType("text")
                        .HasColumnName("TELEFONO_1");

                    b.Property<string>("Telefono2")
                        .HasColumnType("text")
                        .HasColumnName("TELEFONO_2");

                    b.Property<string>("Telefono3")
                        .HasColumnType("text")
                        .HasColumnName("TELEFONO_3");

                    b.HasKey("IdEntidad");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdTipo");

                    b.HasIndex("IdUsuarioRegistro");

                    b.ToTable("ENTIDADES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EntidadesCategorias", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_CATEGORIA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCategoria"));

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NOMBRE_CATEGORIA");

                    b.HasKey("IdCategoria");

                    b.ToTable("ENTIDADES_CATEGORIAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EntidadesTipos", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_TIPO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTipo"));

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NOMBRE");

                    b.HasKey("IdTipo");

                    b.ToTable("ENTIDADES_TIPOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EntidadesTiposCategorias", b =>
                {
                    b.Property<int>("idTipoEntidad")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO");

                    b.Property<int>("IdCategoriaEntidad")
                        .HasColumnType("int")
                        .HasColumnName("ID_CATEGORIA");

                    b.HasKey("idTipoEntidad", "IdCategoriaEntidad");

                    b.HasIndex("IdCategoriaEntidad");

                    b.ToTable("ENTIDADES_TIPOS_CATEGORIAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosArchivosMovimientosStock", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_ARCHIVOS_MOVIMIENTOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosComponentesDetalles", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_COMPONENTES_DETALLES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosCompras", b =>
                {
                    b.Property<int>("IdEstadoCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_COMPRA")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstadoCompra"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO");

                    b.HasKey("IdEstadoCompra");

                    b.ToTable("ESTADOS_COMPRAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosCuotasCompras", b =>
                {
                    b.Property<int>("IdEstadoCuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO_CUOTA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstadoCuota"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.HasKey("IdEstadoCuota");

                    b.ToTable("ESTADOS_CUOTAS_COMPRAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosCuotasVentas", b =>
                {
                    b.Property<int>("IdEstadoCuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_CUOTA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstadoCuota"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.HasKey("IdEstadoCuota");

                    b.ToTable("ESTADOS_CUOTAS_VENTAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosMovimientosStock", b =>
                {
                    b.Property<int?>("IdEstadoMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_MOVIMIENTO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("IdEstadoMovimiento"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.HasKey("IdEstadoMovimiento");

                    b.ToTable("ESTADOS_MOVIMIENTOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosProductos", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_PRODUCTOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosProductosComponentes", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_PRODUCTOS_COMPONENTES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosProductosDescripciones", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_PRODUCTOS_DESCRIPCIONES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosSuministrosMovimientosStock", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_SUMINISTROS_MOVIMIENTOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosTiposProductos", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADOS_PRODUCTOS_TIPOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosVentas", b =>
                {
                    b.Property<int>("IdEstadoVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_VENTA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstadoVenta"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID_ESTADO");

                    b.HasKey("IdEstadoVenta");

                    b.ToTable("ESTADOS_VENTAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.MediosPago", b =>
                {
                    b.Property<int>("IdMedioPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MEDIO_PAGO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMedioPago"));

                    b.Property<string>("CodigoMPago")
                        .HasColumnType("text")
                        .HasColumnName("CODIGO_MPAGO");

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID_ESTADO");

                    b.HasKey("IdMedioPago");

                    b.ToTable("MEDIOS_PAGO", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.PagosCompras", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PAGO")
                        .HasColumnOrder(2);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPago"));

                    b.Property<int?>("CantidadCuotas")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_CUOTAS");

                    b.Property<int?>("CantidadCuotasCanceladas")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_CUOTAS_CANCELADAS");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("ID_COMPRA");

                    b.Property<int>("IdMedioPago")
                        .HasColumnType("int")
                        .HasColumnName("ID_MEDIO_PAGO");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SUBTOTAL");

                    b.Property<decimal?>("SaldoPendiente")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SUBTOTAL_CANCELADO");

                    b.Property<decimal>("MontoCompra")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL");

                    b.HasKey("IdPago");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdMedioPago");

                    b.ToTable("PAGOS_COMPRAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.PagosVentas", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PAGO")
                        .HasColumnOrder(2);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPago"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA");

                    b.Property<int>("IdMedioPago")
                        .HasColumnType("int")
                        .HasColumnName("ID_MEDIO_PAGO");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("ID_VENTA");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MONTO");

                    b.HasKey("IdPago");

                    b.HasIndex("IdMedioPago");

                    b.HasIndex("IdVenta");

                    b.ToTable("PAGOS_VENTAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.PerfilesUsuarios", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_PERFIL");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPerfil"));

                    b.Property<string>("NombreDescripcion")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO");

                    b.HasKey("IdPerfil");

                    b.ToTable("USUARIOS_PERFILES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Producto", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int?>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CANTIDAD")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("DiametroNominal")
                        .HasColumnType("integer")
                        .HasColumnName("DIAMETRO_NOMINAL");

                    b.Property<int>("IdDescripcion")
                        .HasColumnType("integer")
                        .HasColumnName("ID_DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<string>("IdTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ID_TIPO");

                    b.Property<decimal?>("PorcentajeGanancia")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PORCENTAJE_GANANCIA");

                    b.Property<decimal?>("PrecioFinal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECIO_FINAL");

                    b.Property<decimal?>("PrecioLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("PRECIO_LISTA")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Tolerancia")
                        .HasColumnType("text")
                        .HasColumnName("TOLERANCIA");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdDescripcion");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdTipo");

                    b.ToTable("PRODUCTOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ProductosDescripcion", b =>
                {
                    b.Property<int>("IdDescripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_DESCRIPCION");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDescripcion"));

                    b.Property<string>("DescripcionProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.HasKey("IdDescripcion");

                    b.HasIndex("IdEstado");

                    b.ToTable("PRODUCTOS_DESCRIPCION", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ProductosTipo", b =>
                {
                    b.Property<string>("IdTipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ID_TIPO");

                    b.Property<string>("DescripcionTipo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstado"));

                    b.HasKey("IdTipo")
                        .HasName("PK_PRODUCTOS_TIPOS");

                    b.HasIndex("IdEstado");

                    b.ToTable("PRODUCTOS_TIPOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Productos_Componentes", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("IdComponente")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_COMPONENTE");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CANTIDAD");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.Property<decimal?>("Longitud")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("LONGITUD");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PESO");

                    b.HasKey("IdProducto", "IdComponente")
                        .HasName("PK_PRODUCTOS_COMPONENTES");

                    b.HasIndex("IdEstado");

                    b.ToTable("PRODUCTOS_COMPONENTES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Productos_Tipos_Descripcion", b =>
                {
                    b.Property<string>("IdTipo")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_TIPO");

                    b.Property<int?>("IdDescripcion")
                        .HasColumnType("integer")
                        .HasColumnName("ID_DESCRIPCION");

                    b.HasKey("IdTipo", "IdDescripcion");

                    b.HasIndex("IdDescripcion");

                    b.ToTable("PRODUCTOS_TIPOS_DESCRIPCION", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.StockInsumos", b =>
                {
                    b.Property<string>("IdInsumo")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_INSUMO");

                    b.Property<decimal?>("Granallado")
                        .HasColumnType("decimal")
                        .HasColumnName("GRANALLADO");

                    b.Property<decimal?>("Moldeado")
                        .HasColumnType("decimal")
                        .HasColumnName("MOLDEADO");

                    b.Property<decimal?>("Pendiente")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PENDIENTE");

                    b.Property<decimal?>("Pintura")
                        .HasColumnType("decimal")
                        .HasColumnName("PINTURA");

                    b.Property<decimal?>("Proceso")
                        .HasColumnType("decimal")
                        .HasColumnName("PROCESO");

                    b.Property<decimal?>("Recibido")
                        .HasColumnType("decimal")
                        .HasColumnName("RECIBIDO");

                    b.HasKey("IdInsumo")
                        .HasName("PK_STOCK_INSUMOS");

                    b.ToTable("STOCK_INSUMOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Stock_Movimientos", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MOVIMIENTO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMovimiento"));

                    b.Property<string>("CreadoUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUARIO_CREADO");

                    b.Property<string>("Destino")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESTINO");

                    b.Property<DateTime>("FechaHoraCreado")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA_HORA_CREADO");

                    b.Property<DateTime?>("FechaHoraUltimaModificacion")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA_HORA_ULTIMA_MODIFICACION");

                    b.Property<int>("IdEstadoMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_MOVIMIENTO")
                        .HasDefaultValueSql("1");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROVEEDOR_DESTINO");

                    b.Property<int>("IdProveedorOrigen")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROVEEDOR_ORIGEN");

                    b.Property<string>("ModificadoUsuario")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUARIO_MODIFICA");

                    b.Property<string>("Origen")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ORIGEN");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("TIPO");

                    b.HasKey("IdMovimiento");

                    b.HasIndex("IdEstadoMovimiento");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdProveedorOrigen");

                    b.ToTable("STOCK_MOVIMIENTOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.SuministrosMovimientosStock", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("ID_MOVIMIENTO");

                    b.Property<string>("IdSuministro")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_SUMINISTRO");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CANTIDAD");

                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_ESTADO")
                        .HasDefaultValueSql("1");

                    b.HasKey("IdMovimiento", "IdSuministro");

                    b.HasIndex("IdEstado");

                    b.ToTable("SUMINISTROS_MOVIMIENTOS_STOCK", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Usuarios", b =>
                {
                    b.Property<string>("Usuario")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUARIO");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CONTRASEÑA");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREO");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int")
                        .HasColumnName("ID_PERFIL");

                    b.HasKey("Usuario");

                    b.HasIndex("IdPerfil");

                    b.ToTable("USUARIOS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Ventas", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_VENTA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp")
                        .HasColumnName("FECHA_HORA");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int>("IdEstadoVenta")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO_VENTA");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_USUARIO");

                    b.Property<decimal>("SaldoPendiente")
                        .HasColumnType("numeric")
                        .HasColumnName("SALDO_PENDIENTE");

                    b.Property<decimal>("MontoCompra")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL");

                    b.HasKey("IdVenta");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEstadoVenta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("VENTAS", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.VentasDetalles", b =>
                {
                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("ID_VENTA");

                    b.Property<string>("IdProducto")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CANTIDAD");

                    b.Property<int?>("Entregados")
                        .HasColumnType("integer")
                        .HasColumnName("ENTREGADOS");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECIO");

                    b.HasKey("IdVenta", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("VENTAS_DETALLES", (string)null);
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ArchivosMovimientosStock", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EstadosArchivosMovimientosStock", "ArchivosMovimientosStockNavigation")
                        .WithMany("ArchivosMovimientoStock")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.Stock_Movimientos", "StockMovimiento")
                        .WithMany()
                        .HasForeignKey("IdMovimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ARCHIVOS_STOCK_STOCK_MOVIMIENTOS_ID_MOVIMIENTO");

                    b.Navigation("ArchivosMovimientosStockNavigation");

                    b.Navigation("StockMovimiento");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ComponentesDetalle", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EstadosComponentesDetalles", "IdEstadoNavigation")
                        .WithMany("ComponentesDetalle")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Compras", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EstadosCompras", "Estado")
                        .WithMany("compras")
                        .HasForeignKey("IdEstadoCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_COMPRAS_ESTADOS_COMPRAS_ID_ESTADO_COMPRA");

                    b.HasOne("Aponus_Web_API.Modelos.Entidades", "IdProveedor")
                        .WithMany("compras")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.Usuarios", "Usuario")
                        .WithMany("Compras")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_COMPRAS_USUARIOS_USAURIO");

                    b.Navigation("Estado");

                    b.Navigation("IdProveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ComprasDetalles", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.Compras", "Compra")
                        .WithMany("DetallesCompra")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.ComponentesDetalle", "DetallesInsumo")
                        .WithMany("ComprasNavigation")
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("DetallesInsumo");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.CuotasCompras", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.Compras", "CompraNavigation")
                        .WithMany("CuotasCompra")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CUOTAS_COMPRAS_COMPRAS_ID_COMPRA");

                    b.HasOne("Aponus_Web_API.Modelos.EstadosCuotasCompras", "EstadoCuotaCompra")
                        .WithMany("IdEstadoCuotaNavigation")
                        .HasForeignKey("IdEstadoCuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CUOTAS_COMPRAS_ESTADOS_CUOTAS_COMPRAS_ID_ESTADO_CUOTA");

                    b.Navigation("CompraNavigation");

                    b.Navigation("EstadoCuotaCompra");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.CuotasVentas", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EstadosCuotasVentas", "EstadoCuota")
                        .WithMany("IdEstadoCuotaNavigation")
                        .HasForeignKey("IdEstadoCuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.Ventas", "Venta")
                        .WithMany("Cuotas")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCuota");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Entidades", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EntidadesCategorias", "CategoriaEntidad")
                        .WithMany("Entidades")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.EntidadesTipos", "TipoEntidad")
                        .WithMany("Entidades")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.Usuarios", "UsuarioRegistro")
                        .WithMany("IdUsuarioRegistroNavigation")
                        .HasForeignKey("IdUsuarioRegistro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaEntidad");

                    b.Navigation("TipoEntidad");

                    b.Navigation("UsuarioRegistro");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EntidadesTiposCategorias", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EntidadesCategorias", "CategoriaEntidad")
                        .WithMany("TiposCategoriasNavigation")
                        .HasForeignKey("IdCategoriaEntidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.EntidadesTipos", "TipoEntidad")
                        .WithMany("TiposCategoriasNavigation")
                        .HasForeignKey("idTipoEntidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaEntidad");

                    b.Navigation("TipoEntidad");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.PagosCompras", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.Compras", "Compra")
                        .WithMany("Pagos")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.MediosPago", "MedioPago")
                        .WithMany("PagosComprasNavigation")
                        .HasForeignKey("IdMedioPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("MedioPago");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.PagosVentas", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.MediosPago", "MedioPago")
                        .WithMany("PagosVentasNavigation")
                        .HasForeignKey("IdMedioPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.Ventas", "Venta")
                        .WithMany("Pagos")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedioPago");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Producto", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.ProductosDescripcion", "IdDescripcionNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdDescripcion")
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCTOS_PRODUCTOS_DESCRIPCION");

                    b.HasOne("Aponus_Web_API.Modelos.EstadosProductos", "IdEstadoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.ProductosTipo", "IdTipoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCTOS_PRODUCTOS_TIPOS");

                    b.Navigation("IdDescripcionNavigation");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ProductosDescripcion", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EstadosProductosDescripciones", "IdEstadoNavigation")
                        .WithMany("ProductosDescripcions")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ProductosTipo", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EstadosTiposProductos", "IdEstadoNavigation")
                        .WithMany("ProductosTipos")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Productos_Componentes", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EstadosProductosComponentes", "IdEstadoNavigation")
                        .WithMany("ProductosComponentes")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Productos_Tipos_Descripcion", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.ProductosDescripcion", "IdDescripcionNavigation")
                        .WithMany("Producto_Tipo_Descripcione")
                        .HasForeignKey("IdDescripcion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCTOS_TIPOS_DESCRIPCION_ID_DESCRIPCION");

                    b.HasOne("Aponus_Web_API.Modelos.ProductosTipo", "IdTipoNavigation")
                        .WithMany("Producto_Tipo_Descripcione")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_PRODUCTOS_TIPOS_DESCRIPCION_ID_TIPO");

                    b.Navigation("IdDescripcionNavigation");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Stock_Movimientos", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EstadosMovimientosStock", "estadoMovimiento")
                        .WithMany("movimientosStock")
                        .HasForeignKey("IdEstadoMovimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.Entidades", "Proveeedor")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_STOCK_MOVIMIENTOS_ENTIDADES_ID_PROVEEDOR_DESTINO");

                    b.HasOne("Aponus_Web_API.Modelos.Entidades", "ProveedorOrigen")
                        .WithMany("MovimientosOrigen")
                        .HasForeignKey("IdProveedorOrigen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_STOCK_MOVIMIENTOS_ENTIDADES_ID_PROVEEDOR_ORIGEN");

                    b.Navigation("Proveeedor");

                    b.Navigation("ProveedorOrigen");

                    b.Navigation("estadoMovimiento");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.SuministrosMovimientosStock", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.EstadosSuministrosMovimientosStock", "EstadosSuministrosMovimientosStockNavigation")
                        .WithMany("SuministrosMovimientoStock")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SUMINISTROS_MOVIMIENTOS_STOCK_ESTADOS_SUMINISTROS_MOVIMIENTO");

                    b.HasOne("Aponus_Web_API.Modelos.Stock_Movimientos", null)
                        .WithMany("Suministros")
                        .HasForeignKey("IdMovimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadosSuministrosMovimientosStockNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Usuarios", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.PerfilesUsuarios", "Perfil")
                        .WithMany("UsuariosNavigation")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_USUARIOS_PERFILES_USUARIOS_ID_PERFIL");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Ventas", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.Entidades", "Cliente")
                        .WithMany("ventas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.EstadosVentas", "Estado")
                        .WithMany("ventas")
                        .HasForeignKey("IdEstadoVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aponus_Web_API.Modelos.Usuarios", "Usuario")
                        .WithMany("Ventas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.VentasDetalles", b =>
                {
                    b.HasOne("Aponus_Web_API.Modelos.Producto", "IdProductoNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VENTAS_DETALLES_PRODUCTOS_ID_PRODUCTO");

                    b.HasOne("Aponus_Web_API.Modelos.Ventas", "Venta")
                        .WithMany("DetallesVenta")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ComponentesDetalle", b =>
                {
                    b.Navigation("ComprasNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Compras", b =>
                {
                    b.Navigation("CuotasCompra");

                    b.Navigation("DetallesCompra");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Entidades", b =>
                {
                    b.Navigation("Movimientos");

                    b.Navigation("MovimientosOrigen");

                    b.Navigation("compras");

                    b.Navigation("ventas");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EntidadesCategorias", b =>
                {
                    b.Navigation("Entidades");

                    b.Navigation("TiposCategoriasNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EntidadesTipos", b =>
                {
                    b.Navigation("Entidades");

                    b.Navigation("TiposCategoriasNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosArchivosMovimientosStock", b =>
                {
                    b.Navigation("ArchivosMovimientoStock");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosComponentesDetalles", b =>
                {
                    b.Navigation("ComponentesDetalle");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosCompras", b =>
                {
                    b.Navigation("compras");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosCuotasCompras", b =>
                {
                    b.Navigation("IdEstadoCuotaNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosCuotasVentas", b =>
                {
                    b.Navigation("IdEstadoCuotaNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosMovimientosStock", b =>
                {
                    b.Navigation("movimientosStock");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosProductos", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosProductosComponentes", b =>
                {
                    b.Navigation("ProductosComponentes");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosProductosDescripciones", b =>
                {
                    b.Navigation("ProductosDescripcions");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosSuministrosMovimientosStock", b =>
                {
                    b.Navigation("SuministrosMovimientoStock");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosTiposProductos", b =>
                {
                    b.Navigation("ProductosTipos");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.EstadosVentas", b =>
                {
                    b.Navigation("ventas");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.MediosPago", b =>
                {
                    b.Navigation("PagosComprasNavigation");

                    b.Navigation("PagosVentasNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.PerfilesUsuarios", b =>
                {
                    b.Navigation("UsuariosNavigation");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Producto", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ProductosDescripcion", b =>
                {
                    b.Navigation("Producto_Tipo_Descripcione");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.ProductosTipo", b =>
                {
                    b.Navigation("Producto_Tipo_Descripcione");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Stock_Movimientos", b =>
                {
                    b.Navigation("Suministros");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Usuarios", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("IdUsuarioRegistroNavigation");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Aponus_Web_API.Modelos.Ventas", b =>
                {
                    b.Navigation("Cuotas");

                    b.Navigation("DetallesVenta");

                    b.Navigation("Pagos");
                });
#pragma warning restore 612, 618
        }
    }
}
